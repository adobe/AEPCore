# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

# Workflows orchestrate a set of jobs to be run;
workflows:
  version: 2
  build-test:
    jobs:
      - build-and-test

jobs:

  build-and-test:
    macos:
      xcode: 11.6.0 # Specify the Xcode version to use

    steps:
      - checkout
      - run:
          name: Install realm/SwiftLint
          command: brew install swiftlint
      - run: 
          name: Swift Linting
          command: swiftlint lint
      - run:
          name: Install nicklockwood/SwiftFormat
          command: brew install swiftformat
      - run: 
          name: Swift Formating
          command: swiftformat . --lint --swiftversion 5.2
      # pre-start the simulator to prevent timeouts
      - run:
          name: Pre-start Simulator
          command: xcrun instruments -w "iPhone 8 (13.0) [" || true

      - run:
          name: Run Tests
          command: make unit-test

      # Code coverage reports 
      - run:
          name: Upload Code Coverage Reports for AEPCore
          command: bash <(curl -s https://codecov.io/bash) -v -X s3 -c -D "./build/AEPCore/out" -J "AEPCore" 
      - run:
          name: Upload Code Coverage Reports for AEPServices
          command: bash <(curl -s https://codecov.io/bash) -v -X s3 -c -D "./build/AEPServices/out" -J "AEPServices" 
      - run:
          name: Upload Code Coverage Reports for AEPLifecycle
          command: bash <(curl -s https://codecov.io/bash) -v -X s3 -c -D "./build/AEPLifecycle/out" -J "AEPLifecycle" 
      - run:
          name: Upload Code Coverage Reports for AEPIdentity
          command: bash <(curl -s https://codecov.io/bash) -v -X s3 -c -D "./build/AEPIdentity/out" -J "AEPIdentity" 
      - run:
          name: Upload Code Coverage Reports for AEPSignal
          command: bash <(curl -s https://codecov.io/bash) -v -X s3 -c -D "./build/AEPSignal/out" -J "AEPSignal" 

      - run:
          name: Run Integration Tests
          command: make integration-test