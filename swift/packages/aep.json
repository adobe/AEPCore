{"formatVersion":"1.0","generatedAt":"2024-04-19T18:41:43Z","keywords":["aep, adobe, adobe experience platform"],"name":"Adobe Experience Platform SDKs","overview":"The Adobe Experience Platform SDKs maintained by Adobe","packages":[{"keywords":["mobile core, core, lifecycle, signal, identity"],"summary":"Adobe Experience Platform Core SDK","url":"https://github.com/adobe/aepsdk-core-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPCore","products":[{"name":"AEPCore","targets":["AEPCore"],"type":{"library":["automatic"]}},{"name":"AEPIdentity","targets":["AEPIdentity"],"type":{"library":["automatic"]}},{"name":"AEPLifecycle","targets":["AEPLifecycle"],"type":{"library":["automatic"]}},{"name":"AEPServices","targets":["AEPServices"],"type":{"library":["automatic"]}},{"name":"AEPSignal","targets":["AEPSignal"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPCore","name":"AEPCore"},{"moduleName":"AEPIdentity","name":"AEPIdentity"},{"moduleName":"AEPLifecycle","name":"AEPLifecycle"},{"moduleName":"AEPServices","name":"AEPServices"},{"moduleName":"AEPSignal","name":"AEPSignal"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["profile","user profile"],"summary":"Adobe Experience Platform User Profile SDK","url":"https://github.com/adobe/aepsdk-userprofile-ios","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPUserProfile","products":[{"name":"AEPUserProfile","targets":["AEPUserProfile"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPUserProfile","name":"AEPUserProfile"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["assurance","griffon","validation"],"summary":"Adobe Experience Platform Assurance SDK","url":"https://github.com/adobe/aepsdk-assurance-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPAssurance","products":[{"name":"AEPAssurance","targets":["AEPAssurance"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPAssurance","name":"AEPAssurance"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["edge"],"summary":"Adobe Experience Platform Edge SDK","url":"https://github.com/adobe/aepsdk-edge-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPEdge","products":[{"name":"AEPEdge","targets":["AEPEdge"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPEdge","name":"AEPEdge"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["consent","edge consent"],"summary":"Adobe Experience Platform Consent Collection SDK","url":"https://github.com/adobe/aepsdk-edgeconsent-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPEdgeConsent","products":[{"name":"AEPEdgeConsent","targets":["AEPEdgeConsent"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPEdgeConsent","name":"AEPEdgeConsent"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["identity","edge identity"],"summary":"Adobe Experience Platform Edge Identity SDK","url":"https://github.com/adobe/aepsdk-edgeidentity-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPEdgeIdentity","products":[{"name":"AEPEdgeIdentity","targets":["AEPEdgeIdentity"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPEdgeIdentity","name":"AEPEdgeIdentity"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["edge media","media analytics"],"summary":"Adobe Experience Platform Edge Media SDK","url":"https://github.com/adobe/aepsdk-edgemedia-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPEdgeMedia","products":[{"name":"AEPEdgeMedia","targets":["AEPEdgeMedia"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPEdgeMedia","name":"AEPEdgeMedia"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["edge","edge bridge","analytics","migration"],"summary":"Adobe Experience Platform Edge Bridge SDK","url":"https://github.com/adobe/aepsdk-edgebridge-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPEdgeBridge","products":[{"name":"AEPEdgeBridge","targets":["AEPEdgeBridge"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPEdgeBridge","name":"AEPEdgeBridge"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["messaging","iam","in-app messaging","ajo","adobe journey optimizer"],"summary":"Adobe Experience Platform Messaging SDK","url":"https://github.com/adobe/aepsdk-messaging-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPMessaging","products":[{"name":"AEPMessaging","targets":["AEPMessaging"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPMessaging","name":"AEPMessaging"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["optimize","ajo","adobe journey optimizer","decisioning"],"summary":"Adobe Experience Platform Optimize SDK","url":"https://github.com/adobe/aepsdk-optimize-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPOptimize","products":[{"name":"AEPOptimize","targets":["AEPOptimize"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPOptimize","name":"AEPOptimize"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["analytics"],"summary":"Adobe Experience Platform Analytics SDK","url":"https://github.com/adobe/aepsdk-analytics-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPAnalytics","products":[{"name":"AEPAnalytics","targets":["AEPAnalytics"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPAnalytics","name":"AEPAnalytics"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["audience manager","aam"],"summary":"Adobe Experience Platform Audience Manager SDK","url":"https://github.com/adobe/aepsdk-audience-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPAudience","products":[{"name":"AEPAudience","targets":["AEPAudience"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPAudience","name":"AEPAudience"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["media analytics","media","media collection"],"summary":"Adobe Experience Platform Media Analytics SDK","url":"https://github.com/adobe/aepsdk-media-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"},{"name":"tvos","version":"12.0"}],"packageName":"AEPMedia","products":[{"name":"AEPMedia","targets":["AEPMedia"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPMedia","name":"AEPMedia"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["campaign","campaign standard"],"summary":"Adobe Experience Platform Campaign SDK","url":"https://github.com/adobe/aepsdk-campaign-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPCampaign","products":[{"name":"AEPCampaign","targets":["AEPCampaign"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPCampaign","name":"AEPCampaign"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["campaign","campaign classic"],"summary":"Adobe Experience Platform Campaign Classic SDK","url":"https://github.com/adobe/aepsdk-campaignclassic-ios","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPCampaignClassic","products":[{"name":"AEPCampaignClassic","targets":["AEPCampaignClassic"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPCampaignClassic","name":"AEPCampaignClassic"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["places"],"summary":"Adobe Experience Platform Places SDK","url":"https://github.com/adobe/aepsdk-places-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPPlaces","products":[{"name":"AEPPlaces","targets":["AEPPlaces"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPPlaces","name":"AEPPlaces"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]},{"keywords":["target"],"summary":"Adobe Experience Platform Target SDK","url":"https://github.com/adobe/aepsdk-target-ios.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"12.0"}],"packageName":"AEPTarget","products":[{"name":"AEPTarget","targets":["AEPTarget"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"AEPTarget","name":"AEPTarget"}],"toolsVersion":"5.3"}},"version":"5.0.0"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: Adobe Inc.","organization":"Adobe Inc.","organizationalUnit":"JQ525L2MZD","userID":"JQ525L2MZD"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGZFRDQ0JGMmdBd0lCQWdJUUFtRWNYNjh0OXFJKzFuSldFUk50RnpBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSTBNRFF4T1RFM05UVXhNbG9YRFRJMU1EUXhPVEUzTlRVeE1Wb3dnWUl4R2pBWUJnb0praWFKay9Jc1pBRUJEQXBLVVRVeU5Vd3lUVnBFTVMwd0t3WURWUVFERENSVGQybG1kQ0JRWVdOcllXZGxJRU52Ykd4bFkzUnBiMjQ2SUVGa2IySmxJRWx1WXk0eEV6QVJCZ05WQkFzTUNrcFJOVEkxVERKTldrUXhFekFSQmdOVkJBb01Da0ZrYjJKbElFbHVZeTR4Q3pBSkJnTlZCQVlUQWxWVE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeUorK0J2UjR0cEFmaWdvSHNmSnBYVjNXQ2hIaVlFUmtkc2pLZXN0THo1ZzlBV21oVmhMU3p2bVl4enNFZWJEcGszSk9mT2FCcVU4aEppTG1pYlVVYm5BSFJ1ZUhhczBHaG84a25wdjdtU0RPeEFTUFZOV1Zyd01UVmZsS0JvR1NVODl5Y3lYNmlYQkFtbFZWeGQwaklOM0xWK3FXV3g3aUV5clRBZ0lHcVhWRVp0ZEhHdTRJZmNQMjlQclVseGRjeDRPR25uTHY3aDVZTTNWekhIVm90b2pOZGQxaitNMzlBSVNWRzMvNlZ5dFJXcktOQmVPQjZMdVE3WVdqdzRKRzVmRHc5U0lVUVhkb2srSVhSaHhsSVViUHFFSmtCQVRJL2kvMkl3d0tlR1hxMW56bzI3b0x1UWZVcEFJZWNWbVA5Tk15WWVJdlBCa09pc0JMVDhWMXV3SURBUUFCbzRJQjhUQ0NBZTB3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luc2pCQkJnZ3JCZ0VGQlFjQkFRUTFNRE13TVFZSUt3WUJCUVVITUFHR0pXaDBkSEE2THk5dlkzTndMbUZ3Y0d4bExtTnZiUzl2WTNOd01ETXRkM2RrY21jek1Ua3dnZ0VlQmdOVkhTQUVnZ0VWTUlJQkVUQ0NBUTBHQ1NxR1NJYjNZMlFGQVRDQi96Q0J3d1lJS3dZQkJRVUhBZ0l3Z2JZTWdiTlNaV3hwWVc1alpTQnZiaUIwYUdseklHTmxjblJwWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCaGMzTjFiV1Z6SUdGalkyVndkR0Z1WTJVZ2IyWWdkR2hsSUhSb1pXNGdZWEJ3YkdsallXSnNaU0J6ZEdGdVpHRnlaQ0IwWlhKdGN5QmhibVFnWTI5dVpHbDBhVzl1Y3lCdlppQjFjMlVzSUdObGNuUnBabWxqWVhSbElIQnZiR2xqZVNCaGJtUWdZMlZ5ZEdsbWFXTmhkR2x2YmlCd2NtRmpkR2xqWlNCemRHRjBaVzFsYm5SekxqQTNCZ2dyQmdFRkJRY0NBUllyYUhSMGNITTZMeTkzZDNjdVlYQndiR1V1WTI5dEwyTmxjblJwWm1sallYUmxZWFYwYUc5eWFYUjVMekFXQmdOVkhTVUJBZjhFRERBS0JnZ3JCZ0VGQlFjREF6QWRCZ05WSFE0RUZnUVVhYTJIV1BtSmxUUG5ZRHhsc3pwbk9ncWU4NTR3RGdZRFZSMFBBUUgvQkFRREFnZUFNQkFHQ2lxR1NJYjNZMlFHQVNNRUFnVUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNoNUxzYi80UWtVbGtEM05jU1dIajNXaEd0dUc0VGFncEhhb1BlQ0FiV2J5My9HYjhVSGFBK0NkL1ZYUXNEVnZQb0FteW5jdy9DWktDcUpFdUE0Y29EQ1hETEZGRXRLbSs3alFnQmxCS1RJMlhQSWpCTFhUbk8xdXhMNjl6djdNZFYwb1JzaC9XWkJ0U2F5b2RZUjJjb3ZxSTQrSmgranJRb2M5bHV0YTEycVA4dVl4WlNSY2JsVHJWbjdYSWVJNHcxbXIyU2xwZGIwYUxIaFU4VFo2SVUrdVdUU09QK2VIR3lRZWxuL1RIZlBOMzlha2swNG9HM0V1SEN2WTkwSkw5NDNDaUV0b3dDbTcrenIzeE5MQjJoTm5TUWZFd2RjRTBRMmNVRDBiUmNCOU9CK090S1Z5cFh0L3N2L0pLSkJyWlpiTmt5YU1aOTRya0ZuQkhCUmVjbyIsCiAgICAiTUlJRVVUQ0NBem1nQXdJQkFnSVFmSzlwQ2lXM09mNTdtMFI2d1hqRjdqQU5CZ2txaGtpRzl3MEJBUXNGQURCaU1Rc3dDUVlEVlFRR0V3SlZVekVUTUJFR0ExVUVDaE1LUVhCd2JHVWdTVzVqTGpFbU1DUUdBMVVFQ3hNZFFYQndiR1VnUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTVREVUZ3Y0d4bElGSnZiM1FnUTBFd0hoY05NakF3TWpFNU1UZ3hNelEzV2hjTk16QXdNakl3TURBd01EQXdXakIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEyUFdKL0toWkM0ZkhUSkV1TFZhUTAzZ2RwRERwcFVqdkMwTy9MWVQ3SkYxRkcrWHJXVFlTWEZSa25teGlMYlRHbDhyTVBQYldCcEg4NVFLbUhHcTBlZFZueTZ6cFB3Y1I0WVM4UngxbWpqbWk2TFJKN1RyUzRSQmdlbzZUak1yQTJnekFnOURqK1pIV3A0ekl3WFBpcmtiUllwMlNxSkJnTjMxb2xzMk40UHliK25pNzQzdXZMUmZkVy82QVdTTjFGN2dTd2UwYjVUVE8vaUsxbmttdzVWVy9qNFNpUEtpNnhZYVZGdVFBeVo4RDBNeXpPaFo3MWdWY25ldEhyZzIxTFl3T2FVMUEwRXRNT3dTZWpTR3hyQzVEVkRET3dZcUdsSmhMMzJvTlAvNzdISzZYRjhKNENqRGdYeDlVTzBtM0pRQWFONExTVnBlbFVrbDhZRGliN3dJREFRQUJvNEh2TUlIc01CSUdBMVVkRXdFQi93UUlNQVlCQWY4Q0FRQXdId1lEVlIwakJCZ3dGb0FVSzlCcFI1UjJDZjcwYTQwdVFLYjNSMDEvQ0Y0d1JBWUlLd1lCQlFVSEFRRUVPREEyTURRR0NDc0dBUVVGQnpBQmhpaG9kSFJ3T2k4dmIyTnpjQzVoY0hCc1pTNWpiMjB2YjJOemNEQXpMV0Z3Y0d4bGNtOXZkR05oTUM0R0ExVWRId1FuTUNVd0k2QWhvQitHSFdoMGRIQTZMeTlqY213dVlYQndiR1V1WTI5dEwzSnZiM1F1WTNKc01CMEdBMVVkRGdRV0JCUUovc0FWa1BtdlpBcVNFcmttS0dNTWwreW5zakFPQmdOVkhROEJBZjhFQkFNQ0FRWXdFQVlLS29aSWh2ZGpaQVlDQVFRQ0JRQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSzFsRStqMjRJRjNSQUpIUXI1ZnBUa2c2bUtwL2NXUXlYTVQxWjZiMEtvUGpZM0w3UUhQYkNoQVc4ZFZKRUg0L00vQnRTUHAzT3p4YjhxQUhYZkN4R0ZKSldldkQ4bzVKYTNUNDNyTU15Z05EaTZoVjBCeit1WmNyZ1pSS2UzamhReFBZZHd5Rm90MzBFVEtYWElETVVhY3JwdEFHdnIwNE5NKytpK01acCtYeEZSWjc5Skk5QWVaU1dCWkdjZmRsTkhBd1d4L2VDSHZET3M3YkptQ1MxSmdPTFU1Z20zc1VqRlR2ZytSVEVsSmRJK21VY3VFUjA0ZGRTZHV2Zm5TWFBOL3dtd0xDVGJpWk9UQ053TVVHZFhxYXBTcXFkdis5cG9JWjR2dks3aXFGMG1EcjgvTHZPblA2cFZ4c0xSRm9zemxoNm9LdzBFNmVWemFVRFNkbFRzPSIKICBdCn0..pV27YDdT2DrVzaoo9a9aWTD3_PeZTX2V3AMTPrUOYQ76g_KGBohlASAoXkCuBeCT2iY1D_Tytsah2TW0s7cRsbBJtbhKIoyhEL2RDXd-DF1YZNlBg9UPMPzDBNmBkObpL1jdGk8Rzr2097HUgrbF7yxax-iScs4doVwHrnGWVTv2g8gKpElmFyvUEE9kCnHOcYKDKkpC7kx5fTyGNbsD3dhzTg4zybI1WgyRxbUZjKrj-2q7Ua_glojHr1LIc0Xlba6pHdHjntvGqv9mGdPhr_zpSNBoQc26D6scR13i4jghVapJHnVURaRHB2XnZ0C3ShKvEMArcKIGxTBdAh8uRw"}}